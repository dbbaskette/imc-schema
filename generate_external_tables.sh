#!/bin/bash
set -e

# =============================================================================
# Generate External Tables Script
# =============================================================================
# This script generates external table definitions using the current
# configuration from config.env, allowing for dynamic HDFS paths
# =============================================================================

SCRIPT_DIR=$(dirname "$0")

# Load configuration if present
if [ -f "$SCRIPT_DIR/config.env" ]; then
  # shellcheck disable=SC1090
  source "$SCRIPT_DIR/config.env"
fi

# Construct HDFS URL and full paths if not already provided
if [ -z "$HDFS_URL" ] && [ -n "$HDFS_PROTOCOL" ] && [ -n "$HDFS_NAMENODE_HOST" ] && [ -n "$HDFS_NAMENODE_PORT" ]; then
  HDFS_URL="${HDFS_PROTOCOL}://${HDFS_NAMENODE_HOST}:${HDFS_NAMENODE_PORT}"
fi

# Support both CRASH_REPORTS and CRASHREPORTS variable spellings
if [ -z "$HDFS_CRASH_REPORTS_BASE_PATH" ] && [ -n "$HDFS_CRASHREPORTS_BASE_PATH" ]; then
  HDFS_CRASH_REPORTS_BASE_PATH="$HDFS_CRASHREPORTS_BASE_PATH"
fi

if [ -z "$HDFS_TELEMETRY_FULL_PATH" ] && [ -n "$HDFS_URL" ] && [ -n "$HDFS_TELEMETRY_BASE_PATH" ]; then
  HDFS_TELEMETRY_FULL_PATH="${HDFS_URL}${HDFS_TELEMETRY_BASE_PATH}"
fi
if [ -z "$HDFS_CRASH_REPORTS_FULL_PATH" ] && [ -n "$HDFS_URL" ] && [ -n "$HDFS_CRASH_REPORTS_BASE_PATH" ]; then
  HDFS_CRASH_REPORTS_FULL_PATH="${HDFS_URL}${HDFS_CRASH_REPORTS_BASE_PATH}"
fi

echo "Generating external table definitions..."
echo "Telemetry Path (HDFS URL): ${HDFS_TELEMETRY_FULL_PATH:-unset}"
echo "Crash Reports Path (HDFS URL): ${HDFS_CRASH_REPORTS_FULL_PATH:-unset}"

# Derive path-only values for PXF LOCATION (no scheme/authority per PXF docs)
# Example: from hdfs://host:8020/insurance-megacorp/telemetry-data -> insurance-megacorp/telemetry-data
TELEMETRY_PATH_ONLY="$HDFS_TELEMETRY_FULL_PATH"
CRASH_PATH_ONLY="$HDFS_CRASH_REPORTS_FULL_PATH"

# If full URLs are present, strip the scheme/authority parts
if [[ "$TELEMETRY_PATH_ONLY" == hdfs://* ]]; then
  TELEMETRY_PATH_ONLY="${TELEMETRY_PATH_ONLY#hdfs://}"
  TELEMETRY_PATH_ONLY="${TELEMETRY_PATH_ONLY#*/}"
fi
if [[ "$CRASH_PATH_ONLY" == hdfs://* ]]; then
  CRASH_PATH_ONLY="${CRASH_PATH_ONLY#hdfs://}"
  CRASH_PATH_ONLY="${CRASH_PATH_ONLY#*/}"
fi

# Ensure we strip any leading slash
TELEMETRY_PATH_ONLY="${TELEMETRY_PATH_ONLY#/}"
CRASH_PATH_ONLY="${CRASH_PATH_ONLY#/}"

# If paths include a common root (e.g., insurance-megacorp/...),
# make LOCATION relative to that root to avoid basePath duplication.
if [ -n "$HDFS_TELEMETRY_BASE_PATH" ]; then
  ROOT_SEGMENT="${HDFS_TELEMETRY_BASE_PATH#/}"
  ROOT_SEGMENT="${ROOT_SEGMENT%%/*}"
  if [[ "$TELEMETRY_PATH_ONLY" == "$ROOT_SEGMENT"/* ]]; then
    TELEMETRY_PATH_ONLY="${TELEMETRY_PATH_ONLY#${ROOT_SEGMENT}/}"
  fi
fi
if [ -n "$HDFS_CRASH_REPORTS_BASE_PATH" ]; then
  ROOT_SEGMENT2="${HDFS_CRASH_REPORTS_BASE_PATH#/}"
  ROOT_SEGMENT2="${ROOT_SEGMENT2%%/*}"
  if [[ "$CRASH_PATH_ONLY" == "$ROOT_SEGMENT2"/* ]]; then
    CRASH_PATH_ONLY="${CRASH_PATH_ONLY#${ROOT_SEGMENT2}/}"
  fi
fi

# Generate vehicle_telemetry_data.sql with current configuration
cat > "$SCRIPT_DIR/vehicle_telemetry_data_generated.sql" << EOF

-- Auto-generated by generate_external_tables.sh
\set ON_ERROR_STOP on
\echo '--- Dropping foreign table vehicle_telemetry_data (if exists) ---'
DROP FOREIGN TABLE IF EXISTS vehicle_telemetry_data CASCADE;
\echo '--- Creating foreign table vehicle_telemetry_data ---'

CREATE EXTERNAL TABLE vehicle_telemetry_data (
    -- Core telemetry fields (partition columns are in dir names and not in files)
    vin VARCHAR(17),
    timestamp TEXT,
    speed_mph DOUBLE PRECISION,
    current_street VARCHAR(200),
    g_force DOUBLE PRECISION,
    processed_timestamp TIMESTAMP
)
LOCATION ('pxf://telemetry-data/policy_id=*/year=*/month=*/date=*/part-*.parquet?PROFILE=${PXF_PROFILE:-hdfs:parquet}&SERVER=${PXF_SERVER_NAME:-default}')
FORMAT 'CUSTOM' (FORMATTER='pxfwritable_import');

-- Note: Partition columns (policy_id, year, month, date, hour) live in directory names and are not present in Parquet schema

EOF

# Generate crash_reports_data.sql with current configuration
cat > "$SCRIPT_DIR/crash_reports_data_generated.sql" << EOF

-- Auto-generated by generate_external_tables.sh
\set ON_ERROR_STOP on
\echo '--- Dropping foreign table crash_reports_data (if exists) ---'
DROP FOREIGN TABLE IF EXISTS crash_reports_data CASCADE;
\echo '--- Creating foreign table crash_reports_data ---'

CREATE EXTERNAL TABLE crash_reports_data (
    -- Core crash report identification (severity_level is a partition dir)
    report_id VARCHAR(100),
    policy_id VARCHAR(50),
    vin VARCHAR(17),
    crash_timestamp TIMESTAMP,
    crash_type VARCHAR(50),
    -- severity_level is a partition column and may not be in the Parquet schema
    
    -- Impact analysis details
    total_g_force DOUBLE PRECISION,
    lateral_g_force DOUBLE PRECISION,
    vertical_g_force DOUBLE PRECISION,
    speed_at_impact DOUBLE PRECISION,
    deceleration_rate DOUBLE PRECISION,
    
    -- Acceleration vector details
    impact_accel_x DOUBLE PRECISION,
    impact_accel_y DOUBLE PRECISION,
    impact_accel_z DOUBLE PRECISION,
    impact_magnitude DOUBLE PRECISION,
    
    -- Location information
    crash_latitude DOUBLE PRECISION,
    crash_longitude DOUBLE PRECISION,
    current_street VARCHAR(200),
    heading DOUBLE PRECISION,
    accuracy_meters DOUBLE PRECISION,
    
    -- Sensor analysis results
    accelerometer_raw_x DOUBLE PRECISION,
    accelerometer_raw_y DOUBLE PRECISION,
    accelerometer_raw_z DOUBLE PRECISION,
    accelerometer_total_magnitude DOUBLE PRECISION,
    accelerometer_lateral_magnitude DOUBLE PRECISION,
    accelerometer_vertical_magnitude DOUBLE PRECISION,
    
    gyroscope_x DOUBLE PRECISION,
    gyroscope_y DOUBLE PRECISION,
    gyroscope_z DOUBLE PRECISION,
    gyroscope_magnitude DOUBLE PRECISION,
    rollover_detected BOOLEAN,
    spinning_detected BOOLEAN,
    
    magnetometer_x DOUBLE PRECISION,
    magnetometer_y DOUBLE PRECISION,
    magnetometer_z DOUBLE PRECISION,
    magnetometer_heading_degrees DOUBLE PRECISION,
    
    -- Risk assessment
    emergency_recommended BOOLEAN,
    risk_score DOUBLE PRECISION,
    
    -- Processing metadata
    processed_timestamp TIMESTAMP
)
LOCATION ('pxf://crash-reports/severity_level=*/report_date=*/part-*.parquet?PROFILE=${PXF_PROFILE:-hdfs:parquet}&SERVER=${PXF_SERVER_NAME:-default}')
FORMAT 'CUSTOM' (FORMATTER='pxfwritable_import');

-- Note: Partition columns (severity_level, report_date) live in directory names and are not present in Parquet schema

EOF

echo "âœ… Generated external table definitions:"
echo "  - vehicle_telemetry_data_generated.sql"
echo "  - crash_reports_data_generated.sql"